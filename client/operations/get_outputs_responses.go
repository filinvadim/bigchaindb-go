// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/filinvadim/bigchaindb-go/models"
)

// GetOutputsReader is a Reader for the GetOutputs structure.
type GetOutputsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutputsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutputsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutputsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /outputs] GetOutputs", response, response.Code())
	}
}

// NewGetOutputsOK creates a GetOutputsOK with default headers values
func NewGetOutputsOK() *GetOutputsOK {
	return &GetOutputsOK{}
}

/*
GetOutputsOK describes a response with status code 200, with default header values.

Successful response with a list of transaction outputs
*/
type GetOutputsOK struct {
	Payload []*models.Fulfills
}

// IsSuccess returns true when this get outputs o k response has a 2xx status code
func (o *GetOutputsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outputs o k response has a 3xx status code
func (o *GetOutputsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outputs o k response has a 4xx status code
func (o *GetOutputsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outputs o k response has a 5xx status code
func (o *GetOutputsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outputs o k response a status code equal to that given
func (o *GetOutputsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get outputs o k response
func (o *GetOutputsOK) Code() int {
	return 200
}

func (o *GetOutputsOK) Error() string {
	return fmt.Sprintf("[GET /outputs][%d] getOutputsOK  %+v", 200, o.Payload)
}

func (o *GetOutputsOK) String() string {
	return fmt.Sprintf("[GET /outputs][%d] getOutputsOK  %+v", 200, o.Payload)
}

func (o *GetOutputsOK) GetPayload() []*models.Fulfills {
	return o.Payload
}

func (o *GetOutputsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputsBadRequest creates a GetOutputsBadRequest with default headers values
func NewGetOutputsBadRequest() *GetOutputsBadRequest {
	return &GetOutputsBadRequest{}
}

/*
GetOutputsBadRequest describes a response with status code 400, with default header values.

Bad Request - The request wasnâ€™t understood by the server
*/
type GetOutputsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get outputs bad request response has a 2xx status code
func (o *GetOutputsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outputs bad request response has a 3xx status code
func (o *GetOutputsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outputs bad request response has a 4xx status code
func (o *GetOutputsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outputs bad request response has a 5xx status code
func (o *GetOutputsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outputs bad request response a status code equal to that given
func (o *GetOutputsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get outputs bad request response
func (o *GetOutputsBadRequest) Code() int {
	return 400
}

func (o *GetOutputsBadRequest) Error() string {
	return fmt.Sprintf("[GET /outputs][%d] getOutputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutputsBadRequest) String() string {
	return fmt.Sprintf("[GET /outputs][%d] getOutputsBadRequest  %+v", 400, o.Payload)
}

func (o *GetOutputsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetOutputsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
