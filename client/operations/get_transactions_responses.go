// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/filinvadim/bigchaindb-go/models"
)

// GetTransactionsReader is a Reader for the GetTransactions structure.
type GetTransactionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTransactionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTransactionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTransactionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /transactions] GetTransactions", response, response.Code())
	}
}

// NewGetTransactionsOK creates a GetTransactionsOK with default headers values
func NewGetTransactionsOK() *GetTransactionsOK {
	return &GetTransactionsOK{}
}

/*
GetTransactionsOK describes a response with status code 200, with default header values.

OK
*/
type GetTransactionsOK struct {
	Payload []*models.Transaction
}

// IsSuccess returns true when this get transactions o k response has a 2xx status code
func (o *GetTransactionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get transactions o k response has a 3xx status code
func (o *GetTransactionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get transactions o k response has a 4xx status code
func (o *GetTransactionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get transactions o k response has a 5xx status code
func (o *GetTransactionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get transactions o k response a status code equal to that given
func (o *GetTransactionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get transactions o k response
func (o *GetTransactionsOK) Code() int {
	return 200
}

func (o *GetTransactionsOK) Error() string {
	return fmt.Sprintf("[GET /transactions][%d] getTransactionsOK  %+v", 200, o.Payload)
}

func (o *GetTransactionsOK) String() string {
	return fmt.Sprintf("[GET /transactions][%d] getTransactionsOK  %+v", 200, o.Payload)
}

func (o *GetTransactionsOK) GetPayload() []*models.Transaction {
	return o.Payload
}

func (o *GetTransactionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTransactionsBadRequest creates a GetTransactionsBadRequest with default headers values
func NewGetTransactionsBadRequest() *GetTransactionsBadRequest {
	return &GetTransactionsBadRequest{}
}

/*
GetTransactionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTransactionsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get transactions bad request response has a 2xx status code
func (o *GetTransactionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get transactions bad request response has a 3xx status code
func (o *GetTransactionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get transactions bad request response has a 4xx status code
func (o *GetTransactionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get transactions bad request response has a 5xx status code
func (o *GetTransactionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get transactions bad request response a status code equal to that given
func (o *GetTransactionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get transactions bad request response
func (o *GetTransactionsBadRequest) Code() int {
	return 400
}

func (o *GetTransactionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /transactions][%d] getTransactionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetTransactionsBadRequest) String() string {
	return fmt.Sprintf("[GET /transactions][%d] getTransactionsBadRequest  %+v", 400, o.Payload)
}

func (o *GetTransactionsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTransactionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
