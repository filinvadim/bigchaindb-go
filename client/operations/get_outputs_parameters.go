// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetOutputsParams creates a new GetOutputsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOutputsParams() *GetOutputsParams {
	return &GetOutputsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOutputsParamsWithTimeout creates a new GetOutputsParams object
// with the ability to set a timeout on a request.
func NewGetOutputsParamsWithTimeout(timeout time.Duration) *GetOutputsParams {
	return &GetOutputsParams{
		timeout: timeout,
	}
}

// NewGetOutputsParamsWithContext creates a new GetOutputsParams object
// with the ability to set a context for a request.
func NewGetOutputsParamsWithContext(ctx context.Context) *GetOutputsParams {
	return &GetOutputsParams{
		Context: ctx,
	}
}

// NewGetOutputsParamsWithHTTPClient creates a new GetOutputsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOutputsParamsWithHTTPClient(client *http.Client) *GetOutputsParams {
	return &GetOutputsParams{
		HTTPClient: client,
	}
}

/*
GetOutputsParams contains all the parameters to send to the API endpoint

	for the get outputs operation.

	Typically these are written to a http.Request.
*/
type GetOutputsParams struct {

	/* PublicKey.

	   Base58 encoded public key associated with output ownership
	*/
	PublicKey string

	/* Spent.

	   Boolean value indicating if the result set should include only spent or only unspent outputs
	*/
	Spent *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get outputs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOutputsParams) WithDefaults() *GetOutputsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get outputs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOutputsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get outputs params
func (o *GetOutputsParams) WithTimeout(timeout time.Duration) *GetOutputsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get outputs params
func (o *GetOutputsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get outputs params
func (o *GetOutputsParams) WithContext(ctx context.Context) *GetOutputsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get outputs params
func (o *GetOutputsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get outputs params
func (o *GetOutputsParams) WithHTTPClient(client *http.Client) *GetOutputsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get outputs params
func (o *GetOutputsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPublicKey adds the publicKey to the get outputs params
func (o *GetOutputsParams) WithPublicKey(publicKey string) *GetOutputsParams {
	o.SetPublicKey(publicKey)
	return o
}

// SetPublicKey adds the publicKey to the get outputs params
func (o *GetOutputsParams) SetPublicKey(publicKey string) {
	o.PublicKey = publicKey
}

// WithSpent adds the spent to the get outputs params
func (o *GetOutputsParams) WithSpent(spent *bool) *GetOutputsParams {
	o.SetSpent(spent)
	return o
}

// SetSpent adds the spent to the get outputs params
func (o *GetOutputsParams) SetSpent(spent *bool) {
	o.Spent = spent
}

// WriteToRequest writes these params to a swagger request
func (o *GetOutputsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param public_key
	qrPublicKey := o.PublicKey
	qPublicKey := qrPublicKey
	if qPublicKey != "" {

		if err := r.SetQueryParam("public_key", qPublicKey); err != nil {
			return err
		}
	}

	if o.Spent != nil {

		// query param spent
		var qrSpent bool

		if o.Spent != nil {
			qrSpent = *o.Spent
		}
		qSpent := swag.FormatBool(qrSpent)
		if qSpent != "" {

			if err := r.SetQueryParam("spent", qSpent); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
