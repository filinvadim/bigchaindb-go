// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/filinvadim/bigchaindb-go/models"
)

// PostTransactionsReader is a Reader for the PostTransactions structure.
type PostTransactionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostTransactionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 202:
		result := NewPostTransactionsAccepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostTransactionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostTransactionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /transactions] PostTransactions", response, response.Code())
	}
}

// NewPostTransactionsAccepted creates a PostTransactionsAccepted with default headers values
func NewPostTransactionsAccepted() *PostTransactionsAccepted {
	return &PostTransactionsAccepted{}
}

/*
PostTransactionsAccepted describes a response with status code 202, with default header values.

Accepted
*/
type PostTransactionsAccepted struct {
	Payload *models.Transaction
}

// IsSuccess returns true when this post transactions accepted response has a 2xx status code
func (o *PostTransactionsAccepted) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this post transactions accepted response has a 3xx status code
func (o *PostTransactionsAccepted) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post transactions accepted response has a 4xx status code
func (o *PostTransactionsAccepted) IsClientError() bool {
	return false
}

// IsServerError returns true when this post transactions accepted response has a 5xx status code
func (o *PostTransactionsAccepted) IsServerError() bool {
	return false
}

// IsCode returns true when this post transactions accepted response a status code equal to that given
func (o *PostTransactionsAccepted) IsCode(code int) bool {
	return code == 202
}

// Code gets the status code for the post transactions accepted response
func (o *PostTransactionsAccepted) Code() int {
	return 202
}

func (o *PostTransactionsAccepted) Error() string {
	return fmt.Sprintf("[POST /transactions][%d] postTransactionsAccepted  %+v", 202, o.Payload)
}

func (o *PostTransactionsAccepted) String() string {
	return fmt.Sprintf("[POST /transactions][%d] postTransactionsAccepted  %+v", 202, o.Payload)
}

func (o *PostTransactionsAccepted) GetPayload() *models.Transaction {
	return o.Payload
}

func (o *PostTransactionsAccepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Transaction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTransactionsBadRequest creates a PostTransactionsBadRequest with default headers values
func NewPostTransactionsBadRequest() *PostTransactionsBadRequest {
	return &PostTransactionsBadRequest{}
}

/*
PostTransactionsBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type PostTransactionsBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this post transactions bad request response has a 2xx status code
func (o *PostTransactionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post transactions bad request response has a 3xx status code
func (o *PostTransactionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post transactions bad request response has a 4xx status code
func (o *PostTransactionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this post transactions bad request response has a 5xx status code
func (o *PostTransactionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this post transactions bad request response a status code equal to that given
func (o *PostTransactionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the post transactions bad request response
func (o *PostTransactionsBadRequest) Code() int {
	return 400
}

func (o *PostTransactionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /transactions][%d] postTransactionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostTransactionsBadRequest) String() string {
	return fmt.Sprintf("[POST /transactions][%d] postTransactionsBadRequest  %+v", 400, o.Payload)
}

func (o *PostTransactionsBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTransactionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostTransactionsInternalServerError creates a PostTransactionsInternalServerError with default headers values
func NewPostTransactionsInternalServerError() *PostTransactionsInternalServerError {
	return &PostTransactionsInternalServerError{}
}

/*
PostTransactionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostTransactionsInternalServerError struct {
	Payload *models.Error
}

// IsSuccess returns true when this post transactions internal server error response has a 2xx status code
func (o *PostTransactionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this post transactions internal server error response has a 3xx status code
func (o *PostTransactionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this post transactions internal server error response has a 4xx status code
func (o *PostTransactionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this post transactions internal server error response has a 5xx status code
func (o *PostTransactionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this post transactions internal server error response a status code equal to that given
func (o *PostTransactionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the post transactions internal server error response
func (o *PostTransactionsInternalServerError) Code() int {
	return 500
}

func (o *PostTransactionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /transactions][%d] postTransactionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTransactionsInternalServerError) String() string {
	return fmt.Sprintf("[POST /transactions][%d] postTransactionsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostTransactionsInternalServerError) GetPayload() *models.Error {
	return o.Payload
}

func (o *PostTransactionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
