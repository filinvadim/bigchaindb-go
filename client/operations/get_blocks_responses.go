// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/filinvadim/bigchaindb-go/models"
)

// GetBlocksReader is a Reader for the GetBlocks structure.
type GetBlocksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBlocksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBlocksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBlocksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /blocks] GetBlocks", response, response.Code())
	}
}

// NewGetBlocksOK creates a GetBlocksOK with default headers values
func NewGetBlocksOK() *GetBlocksOK {
	return &GetBlocksOK{}
}

/*
GetBlocksOK describes a response with status code 200, with default header values.

Successful response with a list of block IDs
*/
type GetBlocksOK struct {
	Payload []int64
}

// IsSuccess returns true when this get blocks o k response has a 2xx status code
func (o *GetBlocksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get blocks o k response has a 3xx status code
func (o *GetBlocksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get blocks o k response has a 4xx status code
func (o *GetBlocksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get blocks o k response has a 5xx status code
func (o *GetBlocksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get blocks o k response a status code equal to that given
func (o *GetBlocksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get blocks o k response
func (o *GetBlocksOK) Code() int {
	return 200
}

func (o *GetBlocksOK) Error() string {
	return fmt.Sprintf("[GET /blocks][%d] getBlocksOK  %+v", 200, o.Payload)
}

func (o *GetBlocksOK) String() string {
	return fmt.Sprintf("[GET /blocks][%d] getBlocksOK  %+v", 200, o.Payload)
}

func (o *GetBlocksOK) GetPayload() []int64 {
	return o.Payload
}

func (o *GetBlocksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBlocksBadRequest creates a GetBlocksBadRequest with default headers values
func NewGetBlocksBadRequest() *GetBlocksBadRequest {
	return &GetBlocksBadRequest{}
}

/*
GetBlocksBadRequest describes a response with status code 400, with default header values.

Bad Request - The request wasnâ€™t understood by the server
*/
type GetBlocksBadRequest struct {
	Payload *models.Error
}

// IsSuccess returns true when this get blocks bad request response has a 2xx status code
func (o *GetBlocksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get blocks bad request response has a 3xx status code
func (o *GetBlocksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get blocks bad request response has a 4xx status code
func (o *GetBlocksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get blocks bad request response has a 5xx status code
func (o *GetBlocksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get blocks bad request response a status code equal to that given
func (o *GetBlocksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get blocks bad request response
func (o *GetBlocksBadRequest) Code() int {
	return 400
}

func (o *GetBlocksBadRequest) Error() string {
	return fmt.Sprintf("[GET /blocks][%d] getBlocksBadRequest  %+v", 400, o.Payload)
}

func (o *GetBlocksBadRequest) String() string {
	return fmt.Sprintf("[GET /blocks][%d] getBlocksBadRequest  %+v", 400, o.Payload)
}

func (o *GetBlocksBadRequest) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetBlocksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
