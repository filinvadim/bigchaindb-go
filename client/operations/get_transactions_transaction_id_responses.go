// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/filinvadim/bigchaindb-go/models"
)

// GetTransactionsTransactionIDReader is a Reader for the GetTransactionsTransactionID structure.
type GetTransactionsTransactionIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTransactionsTransactionIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTransactionsTransactionIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetTransactionsTransactionIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /transactions/{transaction_id}] GetTransactionsTransactionID", response, response.Code())
	}
}

// NewGetTransactionsTransactionIDOK creates a GetTransactionsTransactionIDOK with default headers values
func NewGetTransactionsTransactionIDOK() *GetTransactionsTransactionIDOK {
	return &GetTransactionsTransactionIDOK{}
}

/*
GetTransactionsTransactionIDOK describes a response with status code 200, with default header values.

OK
*/
type GetTransactionsTransactionIDOK struct {
	Payload *models.Transaction
}

// IsSuccess returns true when this get transactions transaction Id o k response has a 2xx status code
func (o *GetTransactionsTransactionIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get transactions transaction Id o k response has a 3xx status code
func (o *GetTransactionsTransactionIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get transactions transaction Id o k response has a 4xx status code
func (o *GetTransactionsTransactionIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get transactions transaction Id o k response has a 5xx status code
func (o *GetTransactionsTransactionIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get transactions transaction Id o k response a status code equal to that given
func (o *GetTransactionsTransactionIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get transactions transaction Id o k response
func (o *GetTransactionsTransactionIDOK) Code() int {
	return 200
}

func (o *GetTransactionsTransactionIDOK) Error() string {
	return fmt.Sprintf("[GET /transactions/{transaction_id}][%d] getTransactionsTransactionIdOK  %+v", 200, o.Payload)
}

func (o *GetTransactionsTransactionIDOK) String() string {
	return fmt.Sprintf("[GET /transactions/{transaction_id}][%d] getTransactionsTransactionIdOK  %+v", 200, o.Payload)
}

func (o *GetTransactionsTransactionIDOK) GetPayload() *models.Transaction {
	return o.Payload
}

func (o *GetTransactionsTransactionIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Transaction)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTransactionsTransactionIDNotFound creates a GetTransactionsTransactionIDNotFound with default headers values
func NewGetTransactionsTransactionIDNotFound() *GetTransactionsTransactionIDNotFound {
	return &GetTransactionsTransactionIDNotFound{}
}

/*
GetTransactionsTransactionIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTransactionsTransactionIDNotFound struct {
	Payload *models.Error
}

// IsSuccess returns true when this get transactions transaction Id not found response has a 2xx status code
func (o *GetTransactionsTransactionIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get transactions transaction Id not found response has a 3xx status code
func (o *GetTransactionsTransactionIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get transactions transaction Id not found response has a 4xx status code
func (o *GetTransactionsTransactionIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get transactions transaction Id not found response has a 5xx status code
func (o *GetTransactionsTransactionIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get transactions transaction Id not found response a status code equal to that given
func (o *GetTransactionsTransactionIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get transactions transaction Id not found response
func (o *GetTransactionsTransactionIDNotFound) Code() int {
	return 404
}

func (o *GetTransactionsTransactionIDNotFound) Error() string {
	return fmt.Sprintf("[GET /transactions/{transaction_id}][%d] getTransactionsTransactionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetTransactionsTransactionIDNotFound) String() string {
	return fmt.Sprintf("[GET /transactions/{transaction_id}][%d] getTransactionsTransactionIdNotFound  %+v", 404, o.Payload)
}

func (o *GetTransactionsTransactionIDNotFound) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTransactionsTransactionIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
